// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/lxxonx/cinder-server/ent/chatmessage"
	"github.com/lxxonx/cinder-server/ent/chatroom"
	"github.com/lxxonx/cinder-server/ent/group"
	"github.com/lxxonx/cinder-server/ent/pic"
	"github.com/lxxonx/cinder-server/ent/schema"
	"github.com/lxxonx/cinder-server/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	chatmessageFields := schema.ChatMessage{}.Fields()
	_ = chatmessageFields
	// chatmessageDescMessage is the schema descriptor for message field.
	chatmessageDescMessage := chatmessageFields[1].Descriptor()
	// chatmessage.DefaultMessage holds the default value on creation for the message field.
	chatmessage.DefaultMessage = chatmessageDescMessage.Default.(string)
	// chatmessageDescCreatedAt is the schema descriptor for createdAt field.
	chatmessageDescCreatedAt := chatmessageFields[4].Descriptor()
	// chatmessage.DefaultCreatedAt holds the default value on creation for the createdAt field.
	chatmessage.DefaultCreatedAt = chatmessageDescCreatedAt.Default.(func() time.Time)
	// chatmessageDescReadAt is the schema descriptor for readAt field.
	chatmessageDescReadAt := chatmessageFields[5].Descriptor()
	// chatmessage.DefaultReadAt holds the default value on creation for the readAt field.
	chatmessage.DefaultReadAt = chatmessageDescReadAt.Default.(func() time.Time)
	chatroomFields := schema.ChatRoom{}.Fields()
	_ = chatroomFields
	// chatroomDescCreatedAt is the schema descriptor for createdAt field.
	chatroomDescCreatedAt := chatroomFields[1].Descriptor()
	// chatroom.DefaultCreatedAt holds the default value on creation for the createdAt field.
	chatroom.DefaultCreatedAt = chatroomDescCreatedAt.Default.(func() time.Time)
	// chatroomDescUpdatedAt is the schema descriptor for updatedAt field.
	chatroomDescUpdatedAt := chatroomFields[2].Descriptor()
	// chatroom.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	chatroom.DefaultUpdatedAt = chatroomDescUpdatedAt.Default.(func() time.Time)
	// chatroomDescReadAt is the schema descriptor for readAt field.
	chatroomDescReadAt := chatroomFields[3].Descriptor()
	// chatroom.DefaultReadAt holds the default value on creation for the readAt field.
	chatroom.DefaultReadAt = chatroomDescReadAt.Default.(func() time.Time)
	groupFields := schema.Group{}.Fields()
	_ = groupFields
	// groupDescGroupname is the schema descriptor for groupname field.
	groupDescGroupname := groupFields[1].Descriptor()
	// group.DefaultGroupname holds the default value on creation for the groupname field.
	group.DefaultGroupname = groupDescGroupname.Default.(string)
	// groupDescBio is the schema descriptor for bio field.
	groupDescBio := groupFields[2].Descriptor()
	// group.DefaultBio holds the default value on creation for the bio field.
	group.DefaultBio = groupDescBio.Default.(string)
	// groupDescCreatedAt is the schema descriptor for createdAt field.
	groupDescCreatedAt := groupFields[3].Descriptor()
	// group.DefaultCreatedAt holds the default value on creation for the createdAt field.
	group.DefaultCreatedAt = groupDescCreatedAt.Default.(func() time.Time)
	// groupDescUpdatedAt is the schema descriptor for updatedAt field.
	groupDescUpdatedAt := groupFields[4].Descriptor()
	// group.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	group.DefaultUpdatedAt = groupDescUpdatedAt.Default.(func() time.Time)
	// groupDescReadAt is the schema descriptor for readAt field.
	groupDescReadAt := groupFields[5].Descriptor()
	// group.DefaultReadAt holds the default value on creation for the readAt field.
	group.DefaultReadAt = groupDescReadAt.Default.(func() time.Time)
	picFields := schema.Pic{}.Fields()
	_ = picFields
	// picDescAdress is the schema descriptor for adress field.
	picDescAdress := picFields[2].Descriptor()
	// pic.AdressValidator is a validator for the "adress" field. It is called by the builders before save.
	pic.AdressValidator = picDescAdress.Validators[0].(func(string) error)
	// picDescCreatedAt is the schema descriptor for createdAt field.
	picDescCreatedAt := picFields[3].Descriptor()
	// pic.DefaultCreatedAt holds the default value on creation for the createdAt field.
	pic.DefaultCreatedAt = picDescCreatedAt.Default.(func() time.Time)
	// picDescUpdatedAt is the schema descriptor for updatedAt field.
	picDescUpdatedAt := picFields[4].Descriptor()
	// pic.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	pic.DefaultUpdatedAt = picDescUpdatedAt.Default.(func() time.Time)
	// picDescReadAt is the schema descriptor for readAt field.
	picDescReadAt := picFields[5].Descriptor()
	// pic.DefaultReadAt holds the default value on creation for the readAt field.
	pic.DefaultReadAt = picDescReadAt.Default.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[1].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = userDescUsername.Validators[0].(func(string) error)
	// userDescUni is the schema descriptor for uni field.
	userDescUni := userFields[3].Descriptor()
	// user.UniValidator is a validator for the "uni" field. It is called by the builders before save.
	user.UniValidator = userDescUni.Validators[0].(func(string) error)
	// userDescDep is the schema descriptor for dep field.
	userDescDep := userFields[4].Descriptor()
	// user.DepValidator is a validator for the "dep" field. It is called by the builders before save.
	user.DepValidator = userDescDep.Validators[0].(func(string) error)
	// userDescCreatedAt is the schema descriptor for createdAt field.
	userDescCreatedAt := userFields[7].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the createdAt field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updatedAt field.
	userDescUpdatedAt := userFields[8].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// userDescReadAt is the schema descriptor for readAt field.
	userDescReadAt := userFields[9].Descriptor()
	// user.DefaultReadAt holds the default value on creation for the readAt field.
	user.DefaultReadAt = userDescReadAt.Default.(func() time.Time)
}
